<?xml version="1.0" encoding="utf-8"?>
<topic id="28bb5d53-b5dd-48c2-99ad-14be11a49af5" revisionNumber="1">
    <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
        <introduction>
            <para>Here is the documentation for the HelloWorld example</para>
            <autoOutline/>
        </introduction>
        <section address="Description">
            <title>Description</title>
            <content>
                <para>
                    As for every new language, HelloWorld is usually the first examples to know about.
                    This has the most simple state machine: 2 leaf states, one event, one action and one transition.
                </para>
            </content>
        </section>

        <section address="HelloWorldStateMachineDiagram">
            <title>State machine diagram</title>
            <content>
                <para>Here is the HelloWorld state machine diagram:</para>
                <mediaLink>
                    <caption>HelloWorld state diagram</caption>
                    <image xlink:href="HelloWorldStateDiagram"/>
                </mediaLink>
            </content>
        </section>

        <section address="HelloWorldExampleFsm">
            <title>Finite State Machine Markup Language</title>
            <content>
                <para>
                    The following code represents the state machine in the FsmML format:
                </para>
                <code source="..\Examples\CS\HelloWorld\HelloWorld.fsmcs" language="xml"/>
            </content>
        </section>

        <section address="HelloWorldExampleClassDiagram">
            <title>Class Diagram</title>
            <content>
                <para>The following picture is a UML class diagram of the HelloWord system:</para>
                <mediaLink>
                    <caption>HelloWorld class diagram</caption>
                    <image xlink:href="HelloWorldClassDiagram"/>
                </mediaLink>
                <para>
                    This class diagram is composed of 2 classes:
                </para>
                <list class="ordered">
                    <listItem>
                        <para>
                            <codeInline>HelloWorldContext:</codeInline>
                        </para>
                        <list class="bullet">
                            <listItem>
                                <para>
                                    is generated by <application>StateBuilderDotNet</application>.
                                </para>
                            </listItem>
                            <listItem>
                                <para>
                                    has an instance of <codeInline>HelloWorld</codeInline> which is given through its constructor.
                                </para>
                            </listItem>
                            <listItem>
                                <para>
                                    invokes the internal protected method <codeInline>HelloWorld.DoPrint()</codeInline> depending on the current state.
                                </para>
                            </listItem>
                            <listItem>
                                <para>
                                    holds the current state.
                                </para>
                            </listItem>
                        </list>
                    </listItem>
                    <listItem>
                        <para>
                            <codeInline>HelloWorld:</codeInline>
                        </para>
                        <list class="bullet">
                            <listItem>
                                <para>
                                    is exposed to the outside world through the public method <codeInline>Print()</codeInline>.
                                </para>
                            </listItem>
                            <listItem>
                                <para>
                                    holds and creates <codeInline>HelloWorldContext</codeInline>.
                                </para>
                            </listItem>
                            <listItem>
                                <para>
                                    invokes <codeInline>HelloWorldContext.EvPrint()</codeInline>.
                                </para>
                            </listItem>
                            <listItem>
                                <para>
                                    <codeInline>HelloWorld.DoPrint()</codeInline> is internal because only <codeInline>HelloWorldContext</codeInline> should access it.
                                </para>
                            </listItem>
                            <listItem>
                                <para>
                                    <codeInline>HelloWorld.DoPrint()</codeInline> is protected so that <codeInline>HelloWorld</codeInline> becomes testable by mock frameworks such as Rhino.Mock or Moq.
                                </para>
                            </listItem>
                        </list>
                    </listItem>
                </list>
            </content>
        </section>
        
        <section address="HelloWorldCode">
            <title>C# Code</title>
            <content>
                <para>
                    Here the HelloWorld C# code:
                </para>
                <code source="..\Examples\CS\HelloWorld\HelloWorld.cs" language="c#"/>
            </content>
        </section>

        <relatedTopics>

        </relatedTopics>
    </developerConceptualDocument>
</topic>